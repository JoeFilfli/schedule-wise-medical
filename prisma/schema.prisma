generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  DOCTOR
  PATIENT
  ADMIN
}

enum AppointmentStatus {
  SCHEDULED
  COMPLETED
  CANCELLED
  NO_SHOW
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  role      Role
  firstName String
  lastName  String
  verified  Boolean  @default(false)

  phoneNumber     String?
  profilePicture  Bytes?

  doctorProfile   DoctorProfile?
  patientProfile  PatientProfile?

  doctorSlots     Slot[]        @relation("DoctorSlots")
  doctorAppointments  Appointment[] @relation("DoctorAppointments")
  patientAppointments Appointment[] @relation("PatientAppointments")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}


model DoctorProfile {
  id          String  @id @default(cuid())
  userId      String  @unique
  specialty   String?
  bio         String?
  calendarUrl String?

  user User @relation(fields: [userId], references: [id])
}

model PatientProfile {
  id      String  @id @default(cuid())
  userId  String  @unique
  age     Int?
  gender  String?
  history String?

  user User @relation(fields: [userId], references: [id])
}

model Slot {
  id        String   @id @default(cuid())
  doctorId  String
  startTime DateTime
  endTime   DateTime

  doctor      User         @relation("DoctorSlots", fields: [doctorId], references: [id])
  appointment Appointment?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([doctorId, startTime])
}

model Appointment {
  id        String   @id @default(cuid())
  slotId    String?  @unique
  doctorId  String
  patientId String

  status AppointmentStatus @default(SCHEDULED)
  reason String?
  notes  String?
  type   String?

  review String?

  doctorName     String?
  scheduledStart DateTime?
  scheduledEnd   DateTime?

  slot    Slot? @relation(fields: [slotId], references: [id])
  doctor  User  @relation("DoctorAppointments", fields: [doctorId], references: [id])
  patient User  @relation("PatientAppointments", fields: [patientId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

